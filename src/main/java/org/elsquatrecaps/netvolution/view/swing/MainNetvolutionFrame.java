package org.elsquatrecaps.netvolution.view.swing;

import com.fasterxml.jackson.databind.JsonNode;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import org.elsquatrecaps.netvolution.constants.CntFrames;

/**
 *
 * @author josep
 */
public class MainNetvolutionFrame extends javax.swing.JFrame {
    Map<String, JFrame> internalFrames = new HashMap<>();
    /**
     * Creates new form MainNetvolutionFrame
     */
    public MainNetvolutionFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        MainConfigureJButton = new javax.swing.JButton();
        MainOpenConfigurationFileJButton = new javax.swing.JButton();
        MainCreateAndEvolveJButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newConfigurationJMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        saveAsDefaultMenutem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        desktopPane.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        MainConfigureJButton.setFocusable(false);
        MainConfigureJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MainConfigureJButton.setLabel("Configure");
        MainConfigureJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        MainConfigureJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainConfigureJButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(MainConfigureJButton);

        MainOpenConfigurationFileJButton.setText("Open confifuration");
        MainOpenConfigurationFileJButton.setToolTipText("Open a configuration file");
        MainOpenConfigurationFileJButton.setFocusable(false);
        MainOpenConfigurationFileJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MainOpenConfigurationFileJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        MainOpenConfigurationFileJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainOpenConfigurationFileJButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(MainOpenConfigurationFileJButton);

        MainCreateAndEvolveJButton.setText("Create and evolve");
        MainCreateAndEvolveJButton.setToolTipText("Create and evolve an agent popuation");
        MainCreateAndEvolveJButton.setFocusable(false);
        MainCreateAndEvolveJButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MainCreateAndEvolveJButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(MainCreateAndEvolveJButton);
        jToolBar1.add(jSeparator2);

        desktopPane.add(jToolBar1, java.awt.BorderLayout.NORTH);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        newConfigurationJMenuItem.setText("New configuration");
        newConfigurationJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newConfigurationJMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newConfigurationJMenuItem);

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open configuration");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save configuration");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save configuration As ...");
        fileMenu.add(saveAsMenuItem);

        saveAsDefaultMenutem.setText("Save configuration as default");
        saveAsDefaultMenutem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsDefaultMenutemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsDefaultMenutem);

        jSeparator1.setName(""); // NOI18N
        fileMenu.add(jSeparator1);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        contentMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contentMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktopPane, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void saveAsDefaultMenutemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsDefaultMenutemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveAsDefaultMenutemActionPerformed

    private void MainOpenConfigurationFileJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainOpenConfigurationFileJButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MainOpenConfigurationFileJButtonActionPerformed

    private void MainConfigureJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainConfigureJButtonActionPerformed
        // TODO add your handling code here:
        configureSystemAction(null, null);
    }//GEN-LAST:event_MainConfigureJButtonActionPerformed

    private void newConfigurationJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newConfigurationJMenuItemActionPerformed
        // TODO add your handling code here:
        configureSystemAction(null, null);
    }//GEN-LAST:event_newConfigurationJMenuItemActionPerformed

    private void contentMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contentMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainNetvolutionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainNetvolutionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainNetvolutionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainNetvolutionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainNetvolutionFrame().setVisible(true);
            }
        });
    }
    
    private void configureSystemAction(String filename, JsonNode jsonNode){
        ConfigurationSystemFrame configurationSystemFrame;
//        try {
        if(internalFrames.containsKey(CntFrames.CONFIGURE_SYSTEM)){
           //comprovar si comparteixen el mateix fitxer
           
           //comprovar si cal guardar
           
           //si cal substituir per una nova 
           
           //si no cal seguir amb l'actual
           configurationSystemFrame = (ConfigurationSystemFrame) internalFrames.get(CntFrames.CONFIGURE_SYSTEM);
        }else{
            configurationSystemFrame = new ConfigurationSystemFrame();
            internalFrames.put(CntFrames.CONFIGURE_SYSTEM, configurationSystemFrame);
            configurationSystemFrame.setTitle("System congiguration");
//            desktopPane.add(configurationSystemFrame);
            
        }
//            //Create view from FXML
//            URL fxmlLocation = getClass().getResource("ConfigurationSystemGui.fxml");
//            FXMLLoader loader = new FXMLLoader(fxmlLocation);
//            //Set view in window
//            Scene scene = new Scene(loader.load());
//            configStage.setScene(scene);
//            configStage.setMinWidth(1000);
//            configStage.setMinHeight(700);
//            ConfigurationSystemGuiController cont = loader.getController();
//            ObjectMapper objectMapper = new ObjectMapper();            
//            if(filename==null){
//                filename = cont.getDegfaultFileNameConfig();
//            }
//            if(jsonNode==null){
//                jsonConfigData = objectMapper.readTree(getFileConfigContent(filename));
//            }else{
//                jsonConfigData = jsonNode;
//            }
//            cont.setFileNameAndJsonConfigData(filename, jsonConfigData);
//            
//            configStage.setOnCloseRequest((WindowEvent we) -> {
//                updateFrromConfigController(cont);
//               
//            });    
//            configStage.focusedProperty().addListener((ObservableValue<? extends Boolean> ov, Boolean onHidden, Boolean onShown) -> {
//                if(ov.getValue()){
//                    cont.updateGuiWithConfigData();
//                }else{
//                    updateFrromConfigController(cont);
//                }
//            });
//            //Launch
        configurationSystemFrame.pack();
        configurationSystemFrame.setVisible(true);
//            configStage.show();
//        } catch (IOException ex) {
//            ErrortDialog.displayException("Error opening FXML file", "The ConfigurationSystemGui.fxml file can't be loaded\n".concat(ex.getMessage()), ex);
//        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MainConfigureJButton;
    private javax.swing.JButton MainCreateAndEvolveJButton;
    private javax.swing.JButton MainOpenConfigurationFileJButton;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newConfigurationJMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsDefaultMenutem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
